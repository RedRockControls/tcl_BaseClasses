<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Test_NotificationHandlerOnlyAddedOnce" Id="{d822493b-b417-457e-b68d-ce48b3adc9d5}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_NotificationHandlerOnlyAddedOnce EXTENDS T_UnitTestBase
VAR
    Notification        : T_Notification;
    NotificationHandler : T_NotificationHandler;
    IsRaised            : BOOL;
    Assertion           : T_Assertion;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="RunTest" Id="{e4801cbe-a69b-4c40-b3f3-077fc4956321}">
      <Declaration><![CDATA[{attribute 'analysis' := '-33'} // inhibit unused variable warning
METHOD RunTest
VAR_OUTPUT
    TestCompleted : BOOL;
    TestFailed    : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[NotificationHandler.FB_init(bInitRetains := FALSE,
                            bInCopyCode     := FALSE);

Notification
	.ClearNotificationHandlers()
	.AddNotificationHandler(NotificationHandler)
	.AddNotificationHandler(NotificationHandler);

Notification.Raise();
IsRaised := NotificationHandler.IsRaised();

TestFailed S= NOT Assertion.AssertEquals_BOOL(Source    := TestName,
                             Expected     := TRUE,
                            Actual       := IsRaised,
                            VariableName := 'IsRaised');

IsRaised := NotificationHandler.IsRaised();

TestFailed S= NOT Assertion.AssertEquals_BOOL(Source    := TestName,
                             Expected     := FALSE,
                            Actual       := IsRaised,
                            VariableName := 'IsRaised');

TestCompleted := TRUE;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>