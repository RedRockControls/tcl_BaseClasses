<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Test_TExecutionWhenBusy_SetDone_SetsDone" Id="{3b0968c7-1b7c-46b9-9efb-9a2380279946}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_TExecutionWhenBusy_SetDone_SetsDone EXTENDS T_UnitTestbase
VAR
    Execution : T_Execution;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
]]></ST>
    </Implementation>
    <Method Name="Init" Id="{23cdd901-2538-496b-a1ea-bdb2bbac1a89}">
      <Declaration><![CDATA[METHOD Init
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Setup...
Execution.FB_init(bInitRetains := FALSE,
                  bInCopyCode  := FALSE);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="RunTest" Id="{f92519b4-385e-4852-a8fe-c1f3edca25b9}">
      <Declaration><![CDATA[{attribute 'analysis' := '-33'} // inhibit unused variable warning
METHOD RunTest
VAR_OUTPUT
    TestCompleted : BOOL;
    TestFailed    : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Test...
Execution.Start();
Execution.SetBusy();
Execution.SetDone();
					
TestFailed S= NOT AssertTrue(Source    := TestName,
                             Condition := Execution.Done,
                             Message   := 'Execution.Done not true');

TestFailed S= NOT AssertTrue(Source    := TestName,
                             Condition := Execution.Ready,
                             Message   := 'Execution.Ready not true');

TestCompleted := TRUE;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>