<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="TListOfEventHandlers" Id="{3a8db4fc-94af-085a-3d41-823d1d69b86d}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'hide'}
FUNCTION_BLOCK TListOfEventHandlers
VAR
    Buffer : FB_DynMem_Buffer(ipMemMan:= DynamicMemoryManager);
    DynamicMemoryManager : FB_DynMem_Manager;

    pHandler : POINTER TO IEventHandlerBase;
    HandlerCount : UDINT;
    Capacity : UDINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddHandler" Id="{5d49f05d-59dd-07c0-3d3e-03c27a36189b}">
      <Declaration><![CDATA[METHOD AddHandler
VAR_INPUT
    Handler : IEventHandlerBase;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Count = Capacity THEN
    Capacity := Capacity * 2;
    Buffer.Resize(
        nSize     := Capacity * SIZEOF(PVOID),
        bPreserve := TRUE,
        bReset    := FALSE);
    pHandler := Buffer.pBuffer;
END_IF

pHandler[HandlerCount] := Handler;
HandlerCount := HandlerCount + 1;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clear" Id="{ee072623-3886-08f1-27c4-14066118e0ef}">
      <Declaration><![CDATA[METHOD Clear
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Buffer.Clear();
HandlerCount := 0;

]]></ST>
      </Implementation>
    </Method>
    <Property Name="Count" Id="{ba60f67f-7ad8-0f21-1727-1b518eff6e4e}">
      <Declaration><![CDATA[PROPERTY Count : UDINT
]]></Declaration>
      <Get Name="Get" Id="{98d66398-cd78-06e1-28f0-7e4b85a880e5}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Count := HandlerCount;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_exit" Id="{8a0b1f8a-5285-0af3-086a-a9cf9b0c62b6}">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bInCopyCode THEN
    Buffer.DeleteBuffer();
    pHandler := 0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{2a50e8e5-c2b5-08f3-3926-3fdd3f2a333c}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
    Capacity : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Buffer.CreateBuffer(
    nSize := Capacity * SIZEOF(PVOID),
    bReset := TRUE);
    
pHandler := Buffer.pBuffer;
THIS^.Capacity := Capacity;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetHandler" Id="{c19c71bd-1d94-0f78-10d9-f54d1cd43044}">
      <Declaration><![CDATA[METHOD GetHandler : IEventHandlerBase
VAR_INPUT
    Index : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Index < HandlerCount AND Index >= 0 THEN 
    GetHandler := pHandler[Index];
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>