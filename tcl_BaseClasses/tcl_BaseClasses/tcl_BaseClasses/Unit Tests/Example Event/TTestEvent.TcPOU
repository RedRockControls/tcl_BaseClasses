<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="TTestEvent" Id="{9bd4e8ce-6d2e-4f06-81ac-a0fc92b5e5f7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TTestEvent EXTENDS TEventBase 
VAR
    Handler : ITestEventHandler;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="CallHandler" Id="{3e6ff0cc-6c0e-44b2-92a9-d04735dc9a0c}">
      <Declaration><![CDATA[METHOD PRIVATE CallHandler
VAR_INPUT
    HandlerBase : IEventHandlerBase;
    EventArgs   : IStreamReader;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF __QUERYINTERFACE(HandlerBase,Handler) THEN
    Handler.OnCustomEvent(EventArgs);
ELSE
    F_LogError('Event Handling',F_FormatStringEx1('Error raising %s - invalid handler',EventName));
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsHandlerSupported" Id="{5ddf9687-a363-43ee-941d-d4386fc03b98}">
      <Declaration><![CDATA[METHOD IsHandlerSupported : BOOL
VAR_INPUT
    HandlerBase : IEventHandlerBase;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF __QUERYINTERFACE(HandlerBase,Handler) THEN
    IsHandlerSupported := TRUE;
END_IF

]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>