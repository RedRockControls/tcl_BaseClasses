<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="Test_TListOfEventHandlers_StoresAndRetreivesHandlers" Id="{9d280934-dcf8-4683-8309-9bcaa08d0eee}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_TListOfEventHandlers_StoresAndRetreivesHandlers EXTENDS TUnitTestBase
VAR
    EventHandlers : TListOfEventHandlers(Capacity := 5);
    EventHandler1 : TTestEventHandler;
    EventHandler2 : TTestEventHandler;
    EventHandler3 : TTestEventHandler;

    EventHandler1Interface : IEventHandlerBase;
    EventHandler2Interface : IEventHandlerBase;
    EventHandler3Interface : IEventHandlerBase;
    Element0 : IEventHandlerBase;
    Element1 : IEventHandlerBase;
    Element2 : IEventHandlerBase;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
EventHandlers.Clear();

EventHandlers.AddHandler(
    Handler := EventHandler1);
EventHandlers.AddHandler(
    Handler := EventHandler2);
EventHandlers.AddHandler(
    Handler := EventHandler3);
    
Element0 := EventHandlers.GetHandler(0);
Element1 := EventHandlers.GetHandler(1);
Element2 := EventHandlers.GetHandler(2);

EventHandler1Interface := EventHandler1;
EventHandler2Interface := EventHandler2;
EventHandler3Interface := EventHandler3;

Assertion.AssertEquals_INTERFACE(
    Expected := Element0,
    Actual   := EventHandler1Interface,
    VariableName  := 'EventHandler1Interface');
    
Assertion.AssertEquals_INTERFACE(
    Expected := Element1,
    Actual   := EventHandler2Interface,
    VariableName  := 'EventHandler2Interface');
    
Assertion.AssertEquals_INTERFACE(
    Expected := Element2,
    Actual   := EventHandler3Interface,
    VariableName  := 'EventHandler3Interface');
    
_TestFinished := TRUE;    
    
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>