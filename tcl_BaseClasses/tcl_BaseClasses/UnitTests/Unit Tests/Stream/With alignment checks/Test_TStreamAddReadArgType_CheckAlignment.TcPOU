<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Test_TStreamAddReadArgType_CheckAlignment" Id="{b205757d-3a09-4724-a210-11d24ac781c2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_TStreamAddReadArgType_CheckAlignment EXTENDS T_UnitTestBase
VAR
    Stream : T_Stream(StreamLength := 2);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Init" Id="{4bdc3864-462d-4db7-adf6-d2a475ed9e02}">
      <Declaration><![CDATA[METHOD  Init
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="RunTest" Id="{c0df8fd4-8fd8-423e-8e48-d9c54970c82f}">
      <Declaration><![CDATA[{attribute 'analysis' := '-33'} // inhibit unused variable warning
METHOD RunTest
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Stream.Init(2);

Stream.Add_BYTE(123); // add a byte to test alignment checks...
Stream.SetNextArgTypeId(E_ArgTypeId.Type_LINT);

AssertEquals_UDINT(Expected := 4,
                   Actual   := Stream.WritePosition,
                   Message  := 'Stream.WritePosition');

Stream.SetReadPosition(0);

Stream.Read_BYTE();

AssertEquals_INT(Expected := E_ArgTypeId.Type_LINT,
                 Actual   := Stream.GetNextArgTypeId(),
                 Message  := 'Stream.GetNextArgTypeId()');

AssertEquals_UDINT(Expected := 4,
                   Actual   := Stream.ReadPosition,
                   Message  := 'Stream.ReadPosition');

TestCompleted := TRUE;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>