<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Test_TStreamAdd_Read_INT" Id="{ce4168fc-9f53-4eb1-bcab-b1926e926eab}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_TStreamAdd_Read_INT EXTENDS T_UnitTestBase
VAR
    Stream  : T_Stream(StreamLength := 2);
    ArgType : E_ArgTypeId := E_ArgTypeId.Type_INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Init" Id="{c0c33f41-3a5a-4677-98c1-1cb64404d901}">
      <Declaration><![CDATA[METHOD  Init
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="RunTest" Id="{24c0695b-bcf0-4479-9206-8f521fa01430}">
      <Declaration><![CDATA[{attribute 'analysis' := '-33'} // inhibit unused variable warning
METHOD RunTest
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Stream.Init(2);

// add an INT...
Stream.SetNextArgTypeId(ArgType);
Stream.Add_INT(1234);

Stream.SetReadPosition(0);

// check next arg type is correct...
AssertEquals_INT(Expected     := ArgType,
                           Actual       := Stream.GetNextArgTypeId(),
                           Message := 'Stream.GetNextArgTypeId()');

// check next value...	
AssertEquals_INT(Expected     := 1234,
                           Actual       := Stream.Read_INT(),
                           Message := 'Stream.Read_INT()');

// check we are at the end of the stream..							
AssertEquals_UDINT(Expected     := Stream.StreamLength,
                             Actual       := Stream.ReadPosition,
                             Message := 'Stream.ReadPosition');

TestCompleted := TRUE;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>