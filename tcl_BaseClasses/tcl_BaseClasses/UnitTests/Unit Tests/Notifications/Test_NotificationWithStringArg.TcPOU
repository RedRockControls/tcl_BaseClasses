<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Test_NotificationWithStringArg" Id="{e1171451-9ffb-40b1-b7d0-7319c599907b}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'hide'}
FUNCTION_BLOCK Test_NotificationWithStringArg EXTENDS T_UnitTestBase
VAR
    Notification        : T_Notification;
    NotificationHandler : T_NotificationHandler;

    ResultString : T_MaxString;
    Args         : I_StreamReader;
    IsRaised     : BOOL;
    Assertion    : T_Assertion;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="RunTest" Id="{eb6cd482-2f7c-4752-8e5d-ca8001dd58a6}">
      <Declaration><![CDATA[{attribute 'analysis' := '-33'} // inhibit unused variable warning
METHOD RunTest
]]></Declaration>
      <Implementation>
        <ST><![CDATA[NotificationHandler.FB_init(bInitRetains := FALSE,
                            bInCopyCode  := FALSE);

Notification.ClearNotificationHandlers().AddNotificationHandler(NotificationHandler);
Notification.Args.Init(81);

Notification.Args.Clear().Add_STRING('Big long string passed to the notification handler for later use');
Notification.Raise();

IF NotificationHandler.IsRaised() THEN
    Args         := NotificationHandler.Args;
    ResultString := Args.Read_STRING();
END_IF

AssertEquals_STRING(Expected := 'Big long string passed to the notification handler for later use',
                    Actual   := ResultString,
                    Message  := 'ResultString is not correct');

TestCompleted := TRUE;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>