<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="Test_NotificationCount" Id="{5a998e2d-812e-4528-950c-0f147306f34d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_NotificationCount EXTENDS tcl_SimpleUnitTestLibrary.T_UnitTestBase
VAR
    Source   : T_Notification;
    Handler  : T_NotificationHandler;
    IsRaised : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Handler.FB_init(bInitRetains := FALSE,
                bInCopyCode  := FALSE);

Source.ClearNotificationHandlers().AddNotificationHandler(Handler);

Source.Raise();
Source.Raise();
Source.Raise();

Assertion.AssertEquals_DINT(Expected     := 3,
                            Actual       := Handler.NotificationCount,
                            VariableName := 'Handler.NotificationCount');

Assertion.AssertEquals_BOOL(Expected     := TRUE,
                            Actual       := Handler.IsRaised(),
                            VariableName := 'IsRaised');

Assertion.AssertEquals_DINT(Expected     := 2,
                            Actual       := Handler.NotificationCount,
                            VariableName := 'Handler.NotificationCount');

Assertion.AssertEquals_BOOL(Expected     := TRUE,
                            Actual       := Handler.IsRaised(),
                            VariableName := 'IsRaised');

Assertion.AssertEquals_DINT(Expected     := 1,
                            Actual       := Handler.NotificationCount,
                            VariableName := 'Handler.NotificationCount');

IsRaised := Handler.IsRaised();
Assertion.AssertEquals_BOOL(Expected     := TRUE,
                            Actual       := IsRaised,
                            VariableName := 'IsRaised');

Assertion.AssertEquals_DINT(Expected     := 0,
                            Actual       := Handler.NotificationCount,
                            VariableName := 'Handler.NotificationCount');

Assertion.AssertEquals_BOOL(Expected     := FALSE,
                            Actual       := Handler.IsRaised(),
                            VariableName := 'Handler.IsRaised()');

TestFinished();
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>