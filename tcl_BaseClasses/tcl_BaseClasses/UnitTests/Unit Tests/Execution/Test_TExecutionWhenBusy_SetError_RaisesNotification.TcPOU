<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="Test_TExecutionWhenBusy_SetError_RaisesNotification" Id="{452ff667-acfb-46f7-b1ec-7243b874d0f2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_TExecutionWhenBusy_SetError_RaisesNotification EXTENDS T_UnitTestbase
VAR
    Execution                            : T_Execution;
    ExecutionFailed_NotificationHandler  : T_NotificationHandler;
    ExecutionAborted_NotificationHandler : T_NotificationHandler;
END_VAR
VAR
	ErrorId : UDINT := 16#F234;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Setup...
Execution.FB_init(bInitRetains := FALSE,
                  bInCopyCode  := FALSE);

ExecutionFailed_NotificationHandler.FB_init(bInitRetains := FALSE,
                                            bInCopyCode  := FALSE);

ExecutionAborted_NotificationHandler.FB_init(bInitRetains := FALSE,
                                             bInCopyCode  := FALSE);

// link handler to common execution events...
GlobalNotifications.Notification_ExecutionFailed
    .ClearNotificationHandlers()
    .AddNotificationHandler(ExecutionFailed_NotificationHandler);

GlobalNotifications.Notification_ExecutionAborted
    .ClearNotificationHandlers()
    .AddNotificationHandler(ExecutionAborted_NotificationHandler);

// Test...
Execution.Start();                         // sets Starting
Execution.SetBusy();                       // Sets Busy
Execution.SetError(ErrorMsg := ErrorId); // Sets Error

Assertion.AssertEquals_BOOL(Expected     := TRUE,
                            Actual       := ExecutionFailed_NotificationHandler.IsRaised(),
                            VariableName := 'ExecutionFailed_NotificationHandler.IsRaised');

Assertion.AssertEquals_BOOL(Expected     := TRUE,
                            Actual       := Execution.Error,
                            VariableName := 'Execution.Error');

Assertion.AssertEquals_STRING(Expected     := 'Error 0x0000F234',
                              Actual       := Execution.ErrorMsg,
                              VariableName := 'Execution.ErrorMsg');

TestFinished();
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>