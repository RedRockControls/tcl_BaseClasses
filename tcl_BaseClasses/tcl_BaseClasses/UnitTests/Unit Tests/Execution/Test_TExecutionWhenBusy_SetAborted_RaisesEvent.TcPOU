<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="Test_TExecutionWhenBusy_SetAborted_RaisesEvent" Id="{e6104e49-f5bd-4b36-9911-7488f9f89c3f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_TExecutionWhenBusy_SetAborted_RaisesEvent EXTENDS T_UnitTestbase
VAR
    Execution : T_Execution;
    Execution_EventHandler : T_Execution_EventHandler;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Setup...
Execution.FB_init(
    bInitRetains := FALSE,
    bInCopyCode  := FALSE);
Execution_EventHandler.FB_init(
    bInitRetains := FALSE,
    bInCopyCode  := FALSE);
    
// link handler to common execution events...
GlobalEvents.Event_OnAbort.ClearEventHandlers().AddEventHandler(Execution_EventHandler); 
GlobalEvents.Event_OnError.ClearEventHandlers().AddEventHandler(Execution_EventHandler);

// Test...
Execution.Start();
Execution.SetBusy();
Execution.SetAborted(); // raises error event

Assertion.AssertEquals_BOOL(
    Expected := TRUE,
    Actual   := Execution_EventHandler.AbortedEventRaised,
    VariableName  := 'EventHandler.AbortedEventRaised');
    
    
TestFinished();
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>