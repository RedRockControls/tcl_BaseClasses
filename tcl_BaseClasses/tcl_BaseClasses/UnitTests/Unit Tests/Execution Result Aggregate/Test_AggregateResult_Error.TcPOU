<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="Test_AggregateResult_Error" Id="{2cc1540d-06bd-4742-a6db-1ca1c7513675}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_AggregateResult_Error EXTENDS T_UnitTestBase
VAR
	ResultAggregate : T_ResultAggregate;
	Execution1 : T_Execution;
	Execution2 : T_Execution;
	Execution3 : T_Execution;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="RunTest" Id="{8df4aa35-d688-4c72-8ddd-5f355b6b1baa}">
      <Declaration><![CDATA[{attribute 'analysis' := '-33'} // inhibit unused variable warning
METHOD RunTest
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Retest THEN
    SUPER^.Init();
END_IF

IF TestCompleted THEN
    RETURN;
END_IF

F_Inc(CycleCount);
IF CycleCount > 1000 THEN
    Fail(Message := 'Timeout');
END_IF

ResultAggregate.Clear();

ResultAggregate.AddResult(Execution1);
ResultAggregate.AddResult(Execution2);
ResultAggregate.AddResult(Execution3);

Execution1.Start();
Execution1.SetBusy();

AssertIsTrue(Condition := ResultAggregate.Error = FALSE,
             Message   := 'ResultAggregate.Error is not false');

Execution3.Start();
Execution3.SetBusy();
Execution3.SetError('Expected Error Message');

AssertIsTrue(Condition := ResultAggregate.Error = TRUE,
             Message   := 'ResultAggregate.Error is false');

TestCompleted := TRUE;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>