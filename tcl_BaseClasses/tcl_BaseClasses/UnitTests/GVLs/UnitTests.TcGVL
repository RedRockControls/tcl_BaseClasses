<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <GVL Name="UnitTests" Id="{b8360f1b-138e-4dff-86fd-d2ed97da65d9}">
    <Declaration><![CDATA[{attribute 'qualified_only'}
VAR_GLOBAL

    // Functions...
    FunctionTests                   : T_TestSuite;
    Test_F_DINT_TO_UDINT_Conversion : Test_F_DINT_TO_UDINT_Conversion(TestSuite := UnitTests.FunctionTests);
    Test_F_UDINT_TO_DINT_Conversion : Test_F_UDINT_TO_DINT_Conversion(TestSuite := UnitTests.FunctionTests);
    Test_F_Equals                   : Test_F_Equals(TestSuite := UnitTests.FunctionTests);
    Test_F_NotEqual                 : Test_F_NotEqual(TestSuite := UnitTests.FunctionTests);
    Test_ErrorIdToString            : Test_ErrorIdToString(TestSuite := UnitTests.FunctionTests);

    StreamTests                           : T_TestSuite;
    Test_TStream_Add_Read_BLOB            : Test_TStreamAdd_Read_BLOB(StreamTests);
    Test_TStream_Add_Read_BOOL            : Test_TStreamAdd_Read_BOOL(StreamTests);
    Test_TStream_Add_Read_BYTE            : Test_TStreamAdd_Read_BYTE(StreamTests);
    Test_TStream_Add_Read_INT             : Test_TStreamAdd_Read_INT(StreamTests);
    Test_TStream_Add_Read_UINT            : Test_TStreamAdd_Read_UINT(StreamTests);
    Test_TStream_Add_Read_DINT            : Test_TStreamAdd_Read_DINT(StreamTests);
    Test_TStream_Add_Read_UDINT           : Test_TStreamAdd_Read_UDINT(StreamTests);
    Test_TStream_Add_Read_REAL            : Test_TStreamAdd_Read_REAL(StreamTests);
    Test_TStream_Add_Read_LREAL           : Test_TStreamAdd_Read_LREAL(StreamTests);
    Test_TStream_Add_Read_STRING          : Test_TStreamAdd_Read_STRING(StreamTests);
    Test_TStream_Add_Read_Short_STRING    : Test_TStreamAdd_Read_Short_STRING(StreamTests);
    Test_TStream_Add_Read_T_MaxString     : Test_TStreamAdd_Read_T_MaxString(StreamTests);
    Test_TStream_Add_Read_LINT            : Test_TStreamAdd_Read_LINT(StreamTests);
    Test_TStream_Add_Read_ULINT           : Test_TStreamAdd_Read_ULINT(StreamTests);
    Test_TStream_Add_Read_PVOID           : Test_TStreamAdd_Read_PVOID(StreamTests);
    Test_TStream_BufferResizes            : Test_TStreamBufferResizes(StreamTests);
    Test_TStreamAdd_DetectsUnexpectedType : Test_TStreamAddReadArgType(StreamTests);

    // TEventBase...
    EventHandlerTests                                   : T_TestSuite;
    Test_TEvent_AddHandlerAddsHandlerToEventHandlerList :
        Test_TEvent_AddHandlerAddsHandlerToEventHandlerList(TestSuite := UnitTests.EventHandlerTests);
    Test_TListOfEventHandlers_StoresAndRetreivesHandlers :
        Test_TListOfEventHandlers_StoresAndRetreivesHandlers(TestSuite := UnitTests.EventHandlerTests);
    Test_TEvent_AddEventHandler_ChecksInterfaceSupported :
        Test_TEvent_AddEventHandler_ChecksInterfaceSupported(TestSuite := UnitTests.EventHandlerTests);
    Test_TEvent_AddEventHandler_ResizesListWhenListFull :
        Test_TEvent_AddEventHandler_ResizesListWhenListFull(TestSuite := UnitTests.EventHandlerTests);
    Test_TEvent_AddEventHandler_IncsNumberOfEventHandlers :
        Test_TEvent_AddEventHandler_IncsNumberOfEventHandlers(TestSuite := UnitTests.EventHandlerTests);
    Test_TEventHandler_HandlesRaisedEvent                : Test_TEventHandler_HandlesRaisedEvent(TestSuite := UnitTests.EventHandlerTests);
    Test_TEventHandler_HandlesRaisedEvent_UsingEventArgs :
        Test_TEventHandler_HandlesRaisedEvent_UsingEventArgs(TestSuite := UnitTests.EventHandlerTests);

    // T_Execution
    ExecutionTests                                             : T_TestSuite;
    Test_TExecution_WhenBusy_Abort_SelectsAborting             : Test_TExecutionWhenBusy_Abort_SelectsAborting(TestSuite := UnitTests.ExecutionTests);
    Test_TExecutionWhenBusy_SetAborted_RaisesNotification      : Test_TExecutionWhenBusy_SetAborted_RaisesNotification(TestSuite := UnitTests.ExecutionTests);
    Test_TExecution_WhenBusy_SetDone_SetsDone                  : Test_TExecutionWhenBusy_SetDone_SetsDone(TestSuite := UnitTests.ExecutionTests);
    Test_TExecutionWhenBusy_SetError_RaisesNotification        : Test_TExecutionWhenBusy_SetError_RaisesNotification(TestSuite := UnitTests.ExecutionTests);
    Test_TExecutionWhenBusy_Start_RaisesNotification           : Test_TExecutionWhenBusy_Start_RaisesNotification(TestSuite := UnitTests.ExecutionTests);
    Test_TExecution_WhenReady_Start_SelectsStarting            : Test_TExecutionWhenReady_Start_SelectsStarting(TestSuite := UnitTests.ExecutionTests);
    Test_TExecution_SetErrorHandlesString_ErrorId              : Test_TExecution_SetErrorHandlesString_ErrorId(TestSuite := UnitTests.ExecutionTests);
    Test_TExecution_SetErrorHandlesUDINT_ErrorId               : Test_TExecution_SetErrorHandlesUDINT_ErrorId(TestSuite := UnitTests.ExecutionTests);
    Test_TExecution_SetErrorHandlesUINT_ErrorId                : Test_TExecution_SetErrorHandlesUINT_ErrorId(TestSuite := UnitTests.ExecutionTests);

    NotificationTests              : T_TestSuite;
    Test_NotificationNoArgs        : Test_NotificationNoArgs(NotificationTests);
    Test_NotificationWithStringArg : Test_NotificationWithStringArg(NotificationTests);
    Test_NotificationCount         : Test_NotificationCount(NotificationTests);

END_VAR
]]></Declaration>
  </GVL>
</TcPlcObject>